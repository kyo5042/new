






































































































































































































// ufo 2d
/playercontrol
using UnityEngine.UI;

public class PlayerControl : MonoBehaviour
{
    public float speed = 15f;
    public float count;

    public Text countText;

    public Text winText;

    private Rigidbody2D rBody;
    void Start()
    {
        count = 1;

        winText.text = " ";
        rBody = GetComponent<Rigidbody2D>();
    }

    // Update is called once per frame
    void FixedUpdate()
    {
        float horizontalInput = Input.GetAxis("Horizontal");

        float verticalInput = Input.GetAxis("Vertical");

        rBody.AddForce(new Vector2 (horizontalInput, verticalInput)*speed);
    }

    private void OnTriggerEnter2D(Collider2D target)
    {
        if (target.gameObject.CompareTag("Pickup"))
        {
            Destroy(target.gameObject);

            Count();
        }
    }

    void Count()
    {
        
        countText.text = "Count:" + count.ToString();
        count = count + 1;

        if (count >= 9)
        {
            winText.text = "You win";
        }
    }
}

// camerafollow
public class Camerfollow : MonoBehaviour
{
    public GameObject player;

    private Vector3 offset;
    void Start()
    {
        offset = transform.position - player.transform.position;
    }

    // Update is called once per frame
    void LateUpdate()
    {
        transform.position = player.transform.position + offset;
    }
}


//rotator
public class Rotator : MonoBehaviour
{
    

    // Update is called once per frame
    void Update()
    {
        transform.Rotate(new Vector3(0, 0, 45) * Time.deltaTime);
    }
}


//scroll
public class Sctool : MonoBehaviour
{
    float scrollSpeed = -5f;
    Vector2 startPosition;
    void Start()
    {
        startPosition = transform.position;
    }

    // Update is called once per frame
    void Update()
    {
        float newposition = Mathf.Repeat(Time.time * scrollSpeed, 20);
        transform.position = startPosition + Vector2.right * newposition;
    }
}

// player movement
public class NewBehaviourScript : MonoBehaviour
{
    private Animator animator;

    void Start()
    {
        // Get the Animator component
        animator = GetComponent<Animator>();
    }

    void Update()
    {
        // Handle walking when holding down W key
        if (Input.GetKey(KeyCode.W))  // 'W' key is held down
        {
            animator.SetBool("walking", true);
            animator.SetBool("ducking", false);  // Ensure ducking is false while walking
            animator.SetBool("jumping", false);// Ensure ducking is false while walking
        }
        else if (!Input.GetKey(KeyCode.W))  // 'W' key is released
        {
            animator.SetBool("walking", false);
        }

        // Handle ducking when holding down S key
        if (Input.GetKey(KeyCode.C))  // 'S' key is held down
        {
            animator.SetBool("ducking", true);
            animator.SetBool("walking", false);  // Ensure walking is false while ducking
            animator.SetBool("jumping", false);// Ensure ducking is false while walking
        }
        else if (!Input.GetKey(KeyCode.S))  // 'S' key is released
        {
            animator.SetBool("ducking", false);
        }
        //Handle jumpiing when holding down Space Key
        if (Input.GetKeyDown(KeyCode.Space))
        {
            animator.SetBool("jumping", true);
            animator.SetBool("walking", false);  // Ensure walking is false while jumping
            animator.SetBool("ducking", false);  // Ensure ducking is false while jumping
        }
        else if (!Input.GetKey(KeyCode.Space))  // 'Space' key is released
        {
            animator.SetBool("jumping", false);
        }

        // Return to idle when  W ,S ,Space keys are not held down       
        if (!Input.GetKey(KeyCode.W) && !Input.GetKey(KeyCode.S) && !Input.GetKey(KeyCode.Space))
        {
            // No key is pressed, return to idle
            animator.SetTrigger("resetToIdle");
        }
    }
}